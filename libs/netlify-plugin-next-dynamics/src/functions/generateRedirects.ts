import * as fs from 'fs'
import * as path from 'path'

import { transformRoute } from './transformRoute'

interface IRouteManifest {
  version: number
  pages404: boolean
  basePath: string
  dynamicRoutes: {
    page: string
    regex: string
    namedRegex: string
    routeKeys: string[]
  }[]
}

export const generateRedirects = (
  nextDir: string,
  expectedExportPath: string
) => {
  const expectedRouteManifestPath = path.join(nextDir, 'routes-manifest.json')

  /**
   * Step 1: Read manifest
   */
  console.log('reading route manifest that being generated from next')
  if (!fs.existsSync(expectedRouteManifestPath)) {
    throw new Error(`cannot locate routes-manifest.json in ${nextDir}`)
  }

  const routesManifest: IRouteManifest = JSON.parse(
    fs.readFileSync(expectedRouteManifestPath).toString()
  )

  console.log('parsing routes')
  const redirects = routesManifest.dynamicRoutes.map(route => ({
    file: `${route.page}.html`,
    next: route.page,
    netlify: transformRoute(
      route.page,
      routesManifest.basePath === '' ? undefined : routesManifest.basePath
    ),
  }))

  /**
   * Step 2: Generate file
   */
  if (!fs.existsSync(expectedExportPath)) {
    throw new Error(`cannot locate directory ${expectedExportPath}`)
  }

  const expectedRedirectFile = path.join(expectedExportPath, '_redirects')
  const content = [
    '\n# Generated by netlify-plugin-next-dynamic',
    ...redirects.map(redirect => `${redirect.netlify} ${redirect.file} 200`),
  ].join('\n')

  // If file already exists, then append file. Otherwise, create a new file
  if (fs.existsSync(expectedRedirectFile)) {
    console.log('appending redirects')
    fs.appendFileSync(expectedRedirectFile, content)
  } else {
    console.log('writing new redirects')
    fs.writeFileSync(expectedRedirectFile, content)
  }

  return true
}
